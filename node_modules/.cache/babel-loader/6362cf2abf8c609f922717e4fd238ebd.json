{"ast":null,"code":"var _jsxFileName = \"/Users/yuminglin/Desktop/Project-_Pomodoro_Timer-_Qualified-Yu-Ming_Lin-Solution/src/pomodoro/SessionTimer.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction SessionTimer({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  return session && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for\", \" \", session.label === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": 100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60),\n    style: {\n      width: `${100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default SessionTimer;","map":{"version":3,"sources":["/Users/yuminglin/Desktop/Project-_Pomodoro_Timer-_Qualified-Yu-Ming_Lin-Solution/src/pomodoro/SessionTimer.js"],"names":["React","minutesToDuration","secondsToDuration","SessionTimer","session","focusDuration","breakDuration","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAtB,EAAiE;AAC/D,SACEF,OAAO,iBACL,uDACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEG,KADZ,UACuB,GADvB,EAEGH,OAAO,CAACG,KAAR,KAAkB,UAAlB,GACGN,iBAAiB,CAACI,aAAD,CADpB,GAEGJ,iBAAiB,CAACK,aAAD,CAJvB,EAIwC,GAJxC,YAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEI,aAAV,CADpB,eAVF,CADF,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBACE,MACC,MAAML,OAAO,CAACI,aAAf,IACGJ,OAAO,CAACG,KAAR,KAAkB,UAAlB,GACGF,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAPJ;AAYE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAG,GACN,MACC,MAAMN,OAAO,CAACI,aAAf,IACGJ,OAAO,CAACG,KAAR,KAAkB,UAAlB,GACGF,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAID;AAPI,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAjBF,CAFJ;AAkDD;;AAED,eAAeH,YAAf","sourcesContent":["import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction SessionTimer({ session, focusDuration, breakDuration }) {\n  return (\n    session && (\n      <>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* Include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session?.label} for{\" \"}\n              {session.label === \"Focusing\"\n                ? minutesToDuration(focusDuration)\n                : minutesToDuration(breakDuration)}{\" \"}\n              minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={\n                  100 -\n                  (100 * session.timeRemaining) /\n                    (session.label === \"Focusing\"\n                      ? focusDuration * 60\n                      : breakDuration * 60)\n                }\n                style={{\n                  width: `${\n                    100 -\n                    (100 * session.timeRemaining) /\n                      (session.label === \"Focusing\"\n                        ? focusDuration * 60\n                        : breakDuration * 60)\n                  }%`,\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  );\n}\n\nexport default SessionTimer;\n"]},"metadata":{},"sourceType":"module"}